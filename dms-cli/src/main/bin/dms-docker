#!/bin/bash

DEFAULT_DOCKER_EXE=/usr/bin/docker
export DOCKER_EXE=$DEFAULT_DOCKER_EXE
export SPEC_FILENAME=spec.yaml
export TEMP_SPEC_FILE=/tmp/$SPEC_FILENAME

function setupDockerExecutable {
	if [ ! -f $DEFAULT_DOCKER_EXE ]; then
		result=$(whick docker)
		if [ $? -ne 0 ]; then
			echo "Docker is not installed. Please refer to ...."
			exit 1
		else
			export DOCKER_EXE=$result
		fi
	else
		export DOCKER_EXE=$DEFAULT_DOCKER_EXE
	fi
}

function getLatestVersion {
	echo "test"
}

function genLatestSpec {
	version=$(getLatestVersion)
	echo "version: $version" > $TEMP_SPEC_FILE
	echo $TEMP_SPEC_FILE
}

function provisionSpec {
	volume_name=$1
	spec_filename=$2

	# Create the container to manage the volume data. It does not need to run.
	container_id=$(docker container create -v $volume_name:/temp-volume hello-world)

	# Copy the spec.yaml from the volume without running the container. 
	# If it does not exist, generate one locally using the latest dms version and copy it to the volume
	$(docker cp $container_id:/temp-volume/$spec_filename $TEMP_SPEC_FILE)
	if [ $? -ne 0 ]; then
		# echo "The file \"$spec_filename\" DOES NOT exist, creating it..."
		new_spec_filename=$(genLatestSpec)
		docker cp $TEMP_SPEC_FILE $container_id:/temp-volume
	fi

	# Destroy the container
	docker rm $container_id > /dev/null

	# Extract the spec version
	read_version=$(cat $TEMP_SPEC_FILE | grep version | sed 's/.*:\s\+//')
	rm -rf $TEMP_SPEC_FILE

	# Return the version
	echo $read_version
}

function main {
	# Arguments
	command_name=$1
	all_dms_params=$@

	# Constants
	repo_name="overture/dms"
	volume_name="dms-spec"
	spec_filename="spec.yaml"

	setupDockerExecutable

	# Get dms version from spec
	dms_version=$(provisionSpec $volume_name $spec_filename)

	#################################
	# Define the docker options
	#################################
	# This is done so that unix line endings are output. Otherwise, with the -t option, 
	# dos line endings are present and the script cannot be sourced
	docker_opts='--rm -i -e "DOCKER_MODE=true"'
	if [ "$arg1" != "bash-completion" ];then
		# Output colour to the terminal
		docker_opts="$docker_opts -t"
	fi

	docker run $docker_opts $repo_name:$dms_version dms $all_dms_params
}

main $@
