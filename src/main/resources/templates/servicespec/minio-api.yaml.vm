# For more info on the api, refer to:
#  SwaggerEditor: https://editor.swagger.io/
#  OpenAPI: https://docs.docker.com/engine/api/v1.40.yaml
# All durations are in nanotime
Name: minio-api
TaskTemplate:
  ContainerSpec:
    Image: "minio/minio:RELEASE.2018-05-11T00-29-24Z"
    Env:
      - MINIO_ACCESS_KEY=$dmsConfig.score.s3.accessKey
      - MINIO_SECRET_KEY=$dmsConfig.score.s3.secretKey
    Mounts:
      - Type: volume
        Source: minio-api-data
        Target: /data
        ReadOnly: false
    Command: ["minio", "server", "--address", ":$dmsConfig.score.s3.hostPort", "/data"]
    Duration: null
    StopGracePeriod: 120000000000
    DNSConfig: null
    OpenStdin: false
    ReadOnly: false
    Hosts: null
    Hostname: null
    Secrets: null
    HealthCheck:
      Test: ["CMD", "curl", "-f", "http://localhost:$dmsConfig.score.s3.hostPort/minio/health/live"]
      Interval: 30000000000
      Timeout: 20000000000
      Retries: 3
    StopSignal: "SIGINT"
    Privileges: null
    Configs: null
  Resources:
    Limits:
#if( $dmsConfig.clusterRunMode == 'PRODUCTION')
      #2 GiB
      MemoryBytes: 2147483648
#end
      #unlimited.
      NanoCPUs: 0
    Reservations:
#if( $dmsConfig.clusterRunMode == 'PRODUCTION')
      #1.5 GiB
      MemoryBytes: 1610612736
#end
      #unlimited.
      NanoCPUs: 0
  RestartPolicy:
    Condition: "on-failure"
    # 10s
    Delay: 10000000000
    MaxAttempts: 0
    # unbounded
    Window: 0
  Placement: null
  LogDriver:
    Name: "json-file"
    Options: null
  ForceUpdate: 0
  Networks:
  #if( $dmsConfig.clusterRunMode == 'LOCAL')
    - Target: host
      Aliases: null
  #else
    - Target: $dmsConfig.network
      Aliases: null
  #end
  Runtime: null
Mode:
  Replicated:
    Replicas: 1
  Global: null
UpdateConfig:
  FailureAction: "rollback"
  #Since there is a shared volume, containing process information
  # need to ensure its stopped first
  Order: "start-first"
  Parallelism: null
  Delay: null
  MaxFailureRatio: null
  Monitor: null
RollbackConfig:
  FailureAction: "continue"
  #Since there is a shared volume, containing process information
  # need to ensure its stopped first
  Order: "start-first"
  Parallelism: null
  Delay: null
  MaxFailureRatio: 0.8
  Monitor: null
Networks:
#if( $dmsConfig.clusterRunMode == 'LOCAL')
  - Target: host
    Aliases: null
#else
  - Target: $dmsConfig.network
    Aliases: null
#end
EndpointSpec:
  Mode: "vip"
  Ports:
    - Name: "api"
      Protocol: "tcp"
      TargetPort: $dmsConfig.score.s3.hostPort
      PublishedPort: $dmsConfig.score.s3.hostPort
#if( $dmsConfig.clusterRunMode == 'LOCAL')
      PublishMode: host
#else
      PublishMode: ingress
#end
Labels: null

