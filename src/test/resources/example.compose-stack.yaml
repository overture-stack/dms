services:
  - name: ego-api
    ServiceSpec:
      Name: ego-api
      TaskTemplate:
        ContainerSpec:
          Image: "overture/ego:3.1.0"
          Env:
            - SERVER_PORT=8080
            - SPRING_FLYWAY_ENABLED=true
            - SPRING_FLYWAY_LOCATIONS=classpath:flyway/sql,classpath:db/migration
          Mounts: null
          Duration: null
          StopGracePeriod: 120000000000
          DNSConfig: null
          OpenStdin: false
          ReadOnly: false
          Hosts: null
          Hostname: null
          Secrets: null
          HealthCheck: null
          StopSignal: "SIGINT"
          Privileges: null
          Configs: null
        Resources:
          Limits:
            #2 GiB
            MemoryBytes: 2147483648
            #unlimited.
            NanoCPUs: 0
          Reservations:
            #1.5 GiB
            MemoryBytes: 1610612736
            #unlimited.
            NanoCPUs: 0
        RestartPolicy:
          Condition: "on-failure"
          # 10s
          Delay: 10000000000
          ##          MaxAttempts: 10
          MaxAttempts: 0
          # unbounded
          Window: 0
        Placement: null
        LogDriver:
          Name: "json-file"
          Options: null
        ForceUpdate: 0
        Networks:
          - Target: "dms-network"
            Aliases: null
        Runtime: null
      Mode:
        Replicated:
          Replicas: 1
        Global: null
      UpdateConfig:
        FailureAction: "rollback"
        #Since there is a shared volume, containing process information
        # need to ensure its stopped first
        Order: "start-first"
        Parallelism: null
        Delay: null
        MaxFailureRatio: null
        Monitor: null
      RollbackConfig:
        FailureAction: "continue"
        #Since there is a shared volume, containing process information
        # need to ensure its stopped first
        Order: "start-first"
        Parallelism: null
        Delay: null
        MaxFailureRatio: 0.8
        Monitor: null
      Networks:
        - Target: "dms-network"
          Aliases: null
      EndpointSpec:
        Mode: "vip"
        Ports:
          - Name: "api"
            Protocol: "tcp"
            TargetPort: 8080
            PublishedPort: 9999
            PublishMode: "ingress"
      Labels: null
    dependencies:
      - name: ego-db
        type: "service_healthy"
  - name: ego-db
    ServiceSpec:
      Name: ego-db
      TaskTemplate:
        ContainerSpec:
          Image: "postgres:11.1"
          Env:
            - POSTGRES_DB=ego
            - POSTGRES_PASSWORD=password
          Mounts:
            - Type: volume
              Source: ego-db-data
              Target: /var/lib/postgresql/data
              ReadOnly: false
          Duration: null
          StopGracePeriod: 120000000000
          DNSConfig: null
          OpenStdin: false
          ReadOnly: false
          Hosts: null
          Hostname: null
          Secrets: null
          HealthCheck:
            # 30s
            Interval: 30000000000
            # 30s
            Timeout: 30000000000
            Test:
              - "CMD-SHELL"
              - "pg_isready -U postgres"
            Retries: 5
            # 20s
            StartPeriod: 20000000000
          StopSignal: "SIGINT"
          Privileges: null
          Configs: null
        Resources:
          Limits:
            #200 MiB
            MemoryBytes: 209715200
            #unlimited.
            NanoCPUs: 0
          Reservations:
            #100 MiB
            MemoryBytes: 104857600
            #unlimited.
            NanoCPUs: 0
        # NOTE: For the reasons mentioned here https://github.com/docker-library/postgres/issues/101,
        # when the restartpolicy is defined, postgres cannot restart normally.
        RestartPolicy: null
        Placement: null
        LogDriver:
          Name: "json-file"
          Options: null
        ForceUpdate: 0
        Networks:
          - Target: "dms-network"
            Aliases: null
        Runtime: null
      Mode:
        Replicated:
          Replicas: 1
        Global: null
      UpdateConfig:
        FailureAction: "rollback"
        #Since there is a shared volume, containing process information
        # need to ensure its stopped first
        Order: "stop-first"
        Parallelism: null
        Delay: null
        MaxFailureRatio: null
        Monitor: null
      RollbackConfig:
        FailureAction: "continue"
        #Since there is a shared volume, containing process information
        # need to ensure its stopped first
        Order: "stop-first"
        Parallelism: null
        Delay: null
        MaxFailureRatio: 0.8
        Monitor: null
      Networks:
        - Target: "dms-network"
          Aliases: null
      EndpointSpec:
        Mode: "vip"
        Ports:
          - Name: "psql"
            Protocol: "tcp"
            TargetPort: 5432
            PublishedPort: 8889
            PublishMode: "ingress"
      Labels: null

